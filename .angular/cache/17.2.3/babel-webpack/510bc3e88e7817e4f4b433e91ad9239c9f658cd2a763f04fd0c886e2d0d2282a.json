{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/card\";\nexport class FormularioComponent {\n  constructor(http, pessoa) {\n    this.http = http;\n    this.pessoa = pessoa;\n    this.dadosAtualizados = new EventEmitter();\n    this.pessoas = [];\n    this.form = new FormGroup({\n      nome: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(30)]),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      senha: new FormControl(\"\", [Validators.required]),\n      cep: new FormControl(\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(8)]),\n      logradouro: new FormControl({\n        value: \"\",\n        disabled: true\n      }, [Validators.required])\n    });\n  }\n  ngOnInit() {}\n  buscarCep(cep) {\n    const url = `https://viacep.com.br/ws/${cep}/json/`;\n    this.http.get(url).subscribe(data => {\n      this.form.get('logradouro')?.setValue(data.logradouro);\n    });\n  }\n  adicionarPessoa() {\n    if (this.form.valid) {\n      const pessoa = {\n        nome: this.form.get('nome').value,\n        email: this.form.get('email').value,\n        senha: this.form.get('senha').value,\n        cep: this.form.get('cep').value,\n        logradouro: this.form.get('logradouro').value\n      };\n      this.pessoas.push(pessoa);\n      this.form.reset();\n    } else {\n      alert('Formulário inválido!');\n    }\n  }\n  editarPessoa() {}\n  static #_ = this.ɵfac = function FormularioComponent_Factory(t) {\n    return new (t || FormularioComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormularioComponent,\n    selectors: [[\"app-formulario\"]],\n    inputs: {\n      pessoaEditar: \"pessoaEditar\"\n    },\n    outputs: {\n      dadosAtualizados: \"dadosAtualizados\"\n    },\n    decls: 29,\n    vars: 2,\n    consts: [[\"href\", i0.ɵɵtrustConstantResourceUrl`https://fonts.googleapis.com/icon?family=Material+Icons`, \"rel\", \"stylesheet\"], [1, \"formulario\", 3, \"ngSubmit\", \"formGroup\"], [1, \"nome\"], [1, \"full-width-input\"], [\"matInput\", \"\", \"placeholder\", \"Digite o nome\", \"formControlName\", \"nome\", \"required\", \"\", \"minlength\", \"3\", \"maxlength\", \"30\"], [\"type\", \"email\", \"matInput\", \"\", \"placeholder\", \"Digite o e-mail\", \"formControlName\", \"email\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Digite a senha\", \"formControlName\", \"senha\", \"required\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Digite o CEP\", \"formControlName\", \"cep\", \"required\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Logradouro\", \"formControlName\", \"logradouro\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function FormularioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"link\", 0);\n        i0.ɵɵelementStart(1, \"div\")(2, \"mat-card\")(3, \"mat-card-content\")(4, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function FormularioComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.adicionarPessoa();\n        });\n        i0.ɵɵelementStart(5, \"h2\", 2);\n        i0.ɵɵtext(6, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 3);\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementStart(9, \"mat-error\");\n        i0.ɵɵtext(10, \" Nome \\u00E9 obrigat\\u00F3rio \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"mat-form-field\", 3);\n        i0.ɵɵelement(12, \"input\", 5);\n        i0.ɵɵelementStart(13, \"mat-error\");\n        i0.ɵɵtext(14, \" E-mail \\u00E9 obrigat\\u00F3rio\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"mat-form-field\", 3);\n        i0.ɵɵelement(16, \"input\", 6);\n        i0.ɵɵelementStart(17, \"mat-error\");\n        i0.ɵɵtext(18, \" Senha \\u00E9 obrigat\\u00F3rio \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"mat-form-field\", 3);\n        i0.ɵɵelement(20, \"input\", 7);\n        i0.ɵɵelementStart(21, \"mat-error\");\n        i0.ɵɵtext(22, \" CEP \\u00E9 obrigat\\u00F3rio \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"mat-form-field\", 3);\n        i0.ɵɵelement(24, \"input\", 8);\n        i0.ɵɵelementStart(25, \"mat-error\");\n        i0.ɵɵtext(26, \" Logradouro \\u00E9 obrigat\\u00F3rio \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function FormularioComponent_Template_button_click_27_listener() {\n          return ctx.adicionarPessoa();\n        });\n        i0.ɵɵtext(28);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(24);\n        i0.ɵɵtextInterpolate1(\" \", ctx.pessoa ? \"Editar\" : \"Adicionar\", \" \");\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinLengthValidator, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i3.MatButton, i4.MatInput, i5.MatFormField, i5.MatError, i6.MatCard, i6.MatCardContent],\n    styles: [\".formulario[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 20px;\\n}\\n\\nmat-card[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%] {\\n  display: block;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXRpdmlkYWRlcy8yIC0gQ1JVRC9mb3JtdWxhcmlvL2Zvcm11bGFyaW8uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi90ZXN0ZSUyMGZyb250L2MlQzMlQjNkaWdvJTIwdGVzdGUvZnJvbnRlbmQtdGVzdC1tYWluL3NyYy9hcHAvYXRpdmlkYWRlcy8yJTIwLSUyMENSVUQvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsU0FBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7QUNDRjs7QURFQTtFQUNFLGNBQUE7QUNDRjs7QURFQTtFQUNFLFlBQUE7QUNDRiIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtdWxhcmlve1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBnYXA6IDIwcHg7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbm1hdC1mb3JtLWZpZWxkIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLnRpdGxlIHtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuIiwiLmZvcm11bGFyaW8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDIwcHg7XG59XG5cbm1hdC1jYXJkIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5tYXQtZm9ybS1maWVsZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4udGl0bGUge1xuICBjb2xvcjogd2hpdGU7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","FormularioComponent","constructor","http","pessoa","dadosAtualizados","pessoas","form","nome","required","minLength","maxLength","email","senha","cep","logradouro","value","disabled","ngOnInit","buscarCep","url","get","subscribe","data","setValue","adicionarPessoa","valid","push","reset","alert","editarPessoa","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","inputs","pessoaEditar","outputs","decls","vars","consts","ɵɵtrustConstantResourceUrl","template","FormularioComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵlistener","FormularioComponent_Template_form_ngSubmit_4_listener","ɵɵtext","ɵɵelementEnd","FormularioComponent_Template_button_click_27_listener","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["D:\\Aplicativos\\teste front\\código teste\\frontend-test-main\\src\\app\\atividades\\2 - CRUD\\formulario\\formulario.component.ts","D:\\Aplicativos\\teste front\\código teste\\frontend-test-main\\src\\app\\atividades\\2 - CRUD\\formulario\\formulario.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ninterface Pessoa {\n  nome: string;\n  email: string;\n  senha: string;\n  cep: string;\n  logradouro: string;\n}\n\n@Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class FormularioComponent implements OnInit {\n  @Input() pessoaEditar!: Pessoa;\n  @Output() dadosAtualizados = new EventEmitter<Pessoa>();\n  pessoas: Pessoa[] = [];\n\n  constructor(private http: HttpClient, @Inject(MAT_DIALOG_DATA) public pessoa: Pessoa) { }\n\n  form = new FormGroup({\n    nome: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(30)]),\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    senha: new FormControl(\"\", [Validators.required]),\n    cep: new FormControl(\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(8)]),\n    logradouro: new FormControl({ value: \"\", disabled: true }, [Validators.required]),\n  });\n\n  ngOnInit(): void {\n  }\n\n  buscarCep(cep: string) {\n    const url = `https://viacep.com.br/ws/${cep}/json/`;\n    this.http.get(url).subscribe((data: any) => {\n      this.form.get('logradouro')?.setValue(data.logradouro);\n    });\n  }\n\n  adicionarPessoa() {\n    if (this.form.valid) {\n      const pessoa: Pessoa = {\n        nome: this.form.get('nome')!.value!,\n        email: this.form.get('email')!.value!,\n        senha: this.form.get('senha')!.value!,\n        cep: this.form.get('cep')!.value!,\n        logradouro: this.form.get('logradouro')!.value!\n      };\n      this.pessoas.push(pessoa);\n\n      this.form.reset();\n    } else {\n      alert('Formulário inválido!');\n    }\n  }\n\n  editarPessoa(){\n    \n  }\n}\n","<!DOCTYPE html>\n<link\n  href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n  rel=\"stylesheet\"\n/>\n\n<div>\n  <mat-card>\n    <mat-card-content>\n      <form\n        class=\"formulario\"\n        [formGroup]=\"form\"\n        (ngSubmit)=\"adicionarPessoa()\"\n      >\n        <h2 class=\"nome\">Nome</h2>\n        <mat-form-field class=\"full-width-input\">\n          <input\n            matInput\n            placeholder=\"Digite o nome\"\n            formControlName=\"nome\"\n            required\n            minlength=\"3\"\n            maxlength=\"30\"\n          />\n          <mat-error> Nome é obrigatório </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input\n            type=\"email\"\n            matInput\n            placeholder=\"Digite o e-mail\"\n            formControlName=\"email\"\n            required\n          />\n          <mat-error> E-mail é obrigatório</mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input\n            matInput\n            type=\"password\"\n            placeholder=\"Digite a senha\"\n            formControlName=\"senha\"\n            required\n          />\n          <mat-error> Senha é obrigatório </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input\n            matInput\n            placeholder=\"Digite o CEP\"\n            formControlName=\"cep\"\n            required\n          />\n          <mat-error> CEP é obrigatório </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input\n            matInput\n            placeholder=\"Logradouro\"\n            formControlName=\"logradouro\"\n            required\n          />\n          <mat-error> Logradouro é obrigatório </mat-error>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\" (click)=\"adicionarPessoa()\">\n          {{ pessoa ? \"Editar\" : \"Adicionar\" }}\n        </button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}