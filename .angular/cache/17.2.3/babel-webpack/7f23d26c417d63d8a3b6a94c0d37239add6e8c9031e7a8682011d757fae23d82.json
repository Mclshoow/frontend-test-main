{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nlet FormularioComponent = class FormularioComponent {\n  constructor(http, pessoa, formBuilder) {\n    this.http = http;\n    this.pessoa = pessoa;\n    this.formBuilder = formBuilder;\n    this.pessoas = [];\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      nome: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(30)]),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      senha: new FormControl(\"\", [Validators.required]),\n      cep: new FormControl(\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(8)]),\n      logradouro: new FormControl({\n        value: \"\",\n        disabled: true\n      }, [Validators.required])\n    });\n  }\n  buscarCep(cep) {\n    const url = `https://viacep.com.br/ws/${cep}/json/`;\n    this.http.get(url).subscribe(data => {\n      this.form.get('logradouro')?.setValue(data.logradouro);\n    });\n  }\n  adicionarPessoa() {\n    if (this.form.valid) {\n      try {\n        const pessoa = {\n          nome: this.form.get('nome').value,\n          email: this.form.get('email').value,\n          senha: this.form.get('senha').value,\n          cep: this.form.get('cep').value,\n          logradouro: this.form.get('logradouro').value\n        };\n        this.pessoas.push(pessoa);\n        this.form.reset();\n      } catch (err) {\n        console.log('Erro ao enviar o formulário!', err);\n      }\n    } else {\n      alert('Formulário inválido!');\n    }\n  }\n  editarPessoa(pessoaEditar) {\n    this.form = this.formBuilder.group({\n      nome: pessoaEditar.nome,\n      email: pessoaEditar.email,\n      senha: pessoaEditar.senha,\n      cep: pessoaEditar.cep,\n      logradouro: pessoaEditar.logradouro\n    });\n  }\n};\nFormularioComponent = __decorate([Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n}), __param(1, Inject(MAT_DIALOG_DATA))], FormularioComponent);\nexport { FormularioComponent };","map":{"version":3,"names":["Component","Inject","FormControl","Validators","MAT_DIALOG_DATA","FormularioComponent","constructor","http","pessoa","formBuilder","pessoas","ngOnInit","form","group","nome","required","minLength","maxLength","email","senha","cep","logradouro","value","disabled","buscarCep","url","get","subscribe","data","setValue","adicionarPessoa","valid","push","reset","err","console","log","alert","editarPessoa","pessoaEditar","__decorate","selector","templateUrl","styleUrls","__param"],"sources":["D:\\Aplicativos\\teste front\\código teste\\frontend-test-main\\src\\app\\atividades\\2 - CRUD\\formulario\\formulario.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ninterface Pessoa {\n  nome: string;\n  email: string;\n  senha: string;\n  cep: string;\n  logradouro: string;\n}\n\n@Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class FormularioComponent implements OnInit {\n  pessoas: Pessoa[] = [];\n  form!: FormGroup;\n\n  constructor(private http: HttpClient, @Inject(MAT_DIALOG_DATA) public pessoa: Pessoa, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      nome: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(30)]),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      senha: new FormControl(\"\", [Validators.required]),\n      cep: new FormControl(\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(8)]),\n      logradouro: new FormControl({ value: \"\", disabled: true }, [Validators.required]),\n    });\n  }\n\n  buscarCep(cep: string) {\n    const url = `https://viacep.com.br/ws/${cep}/json/`;\n    this.http.get(url).subscribe((data: any) => {\n      this.form.get('logradouro')?.setValue(data.logradouro);\n    });\n  }\n\n  adicionarPessoa() {\n    if (this.form.valid) {\n      try {\n        const pessoa: Pessoa = {\n          nome: this.form.get('nome')!.value!,\n          email: this.form.get('email')!.value!,\n          senha: this.form.get('senha')!.value!,\n          cep: this.form.get('cep')!.value!,\n          logradouro: this.form.get('logradouro')!.value!\n        };\n        this.pessoas.push(pessoa);\n\n        this.form.reset();\n      }\n      catch (err) {\n        console.log('Erro ao enviar o formulário!', err);\n      }\n    } else {\n      alert('Formulário inválido!');\n    }\n  }\n\n  editarPessoa(pessoaEditar: Pessoa) {\n    this.form = this.formBuilder.group({\n      nome: pessoaEditar.nome,\n      email: pessoaEditar.email,\n      senha: pessoaEditar.senha,\n      cep: pessoaEditar.cep,\n      logradouro: pessoaEditar.logradouro\n    })\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}