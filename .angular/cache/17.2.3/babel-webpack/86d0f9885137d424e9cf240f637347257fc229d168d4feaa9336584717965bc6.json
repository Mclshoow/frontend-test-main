{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nlet FormularioComponent = class FormularioComponent {\n  constructor(http, pessoa, pessoaEditar) {\n    this.http = http;\n    this.pessoa = pessoa;\n    this.dadosAtualizados = new EventEmitter();\n    this.pessoas = [];\n    this.form = new FormGroup({\n      nome: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(30)]),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      senha: new FormControl(\"\", [Validators.required]),\n      cep: new FormControl(\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(8)]),\n      logradouro: new FormControl({\n        value: \"\",\n        disabled: true\n      }, [Validators.required])\n    });\n  }\n  ngOnInit() {}\n  buscarCep(cep) {\n    const url = `https://viacep.com.br/ws/${cep}/json/`;\n    this.http.get(url).subscribe(data => {\n      this.form.get('logradouro')?.setValue(data.logradouro);\n    });\n  }\n  adicionarPessoa() {\n    if (this.form.valid) {\n      const pessoa = {\n        nome: this.form.get('nome').value,\n        email: this.form.get('email').value,\n        senha: this.form.get('senha').value,\n        cep: this.form.get('cep').value,\n        logradouro: this.form.get('logradouro').value\n      };\n      this.pessoas.push(pessoa);\n      this.form.reset();\n    } else {\n      alert('Formulário inválido!');\n    }\n  }\n};\n__decorate([Input()], FormularioComponent.prototype, \"pessoaEditar\", void 0);\n__decorate([Output()], FormularioComponent.prototype, \"dadosAtualizados\", void 0);\nFormularioComponent = __decorate([Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n}), __param(1, Inject(MAT_DIALOG_DATA))], FormularioComponent);\nexport { FormularioComponent };","map":{"version":3,"names":["Component","EventEmitter","Inject","Input","Output","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","FormularioComponent","constructor","http","pessoa","pessoaEditar","dadosAtualizados","pessoas","form","nome","required","minLength","maxLength","email","senha","cep","logradouro","value","disabled","ngOnInit","buscarCep","url","get","subscribe","data","setValue","adicionarPessoa","valid","push","reset","alert","__decorate","selector","templateUrl","styleUrls","__param"],"sources":["D:\\Aplicativos\\teste front\\código teste\\frontend-test-main\\src\\app\\atividades\\2 - CRUD\\formulario\\formulario.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ninterface Pessoa {\n  nome: string;\n  email: string;\n  senha: string;\n  cep: string;\n  logradouro: string;\n}\n\n@Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss'],\n})\nexport class FormularioComponent implements OnInit {\n  @Input() pessoaEditar: Pessoa;\n  @Output() dadosAtualizados = new EventEmitter<Pessoa>();\n  pessoas: Pessoa[] = [];\n\n  constructor(private http: HttpClient, @Inject(MAT_DIALOG_DATA) public pessoa: Pessoa, pessoaEditar: Pessoa) { }\n\n  form = new FormGroup({\n    nome: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(30)]),\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    senha: new FormControl(\"\", [Validators.required]),\n    cep: new FormControl(\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(8)]),\n    logradouro: new FormControl({ value: \"\", disabled: true }, [Validators.required]),\n  });\n\n  ngOnInit(): void {\n  }\n\n  buscarCep(cep: string) {\n    const url = `https://viacep.com.br/ws/${cep}/json/`;\n    this.http.get(url).subscribe((data: any) => {\n      this.form.get('logradouro')?.setValue(data.logradouro);\n    });\n  }\n\n  adicionarPessoa() {\n    if (this.form.valid) {\n      const pessoa: Pessoa = {\n        nome: this.form.get('nome')!.value!,\n        email: this.form.get('email')!.value!,\n        senha: this.form.get('senha')!.value!,\n        cep: this.form.get('cep')!.value!,\n        logradouro: this.form.get('logradouro')!.value!\n      };\n      this.pessoas.push(pessoa);\n\n      this.form.reset();\n    } else {\n      alert('Formulário inválido!');\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}