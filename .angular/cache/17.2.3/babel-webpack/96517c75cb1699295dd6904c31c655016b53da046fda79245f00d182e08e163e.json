{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"class\", \"4-scss-funcao\"];\nexport class A14ScssFuncaoComponent {\n  constructor() {}\n  ngOnInit() {}\n  static #_ = this.ɵfac = function A14ScssFuncaoComponent_Factory(t) {\n    return new (t || A14ScssFuncaoComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: A14ScssFuncaoComponent,\n    selectors: [[\"app-a1\", 8, \"4-scss-funcao\"]],\n    attrs: _c0,\n    decls: 18,\n    vars: 0,\n    consts: [[1, \"page-container\"], [1, \"wrapper\"], [1, \"item\", \"item1\"], [1, \"item\", \"item2\"], [1, \"item\", \"item3\"], [1, \"item\", \"item4\"]],\n    template: function A14ScssFuncaoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n        i0.ɵɵtext(2, \"[ ] Crie uma fun\\u00E7\\u00E3o em scss que eu passe um n\\u00EDvel de opacidade/tom da cor e ela me retorne o valor do background. Aplique um n\\u00EDvel de cor para cada item.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \"ex.: get-dark-bg(nivel)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6, \"get-dark-bg(1) retorna rgba(0,0,0,.1)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8, \"get-dark-bg(2) retorna rgba(0,0,0,.2)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10, \"get-dark-bg(3) retorna rgba(0,0,0,.3)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12, \"get-dark-bg(4) retorna rgba(0,0,0,.4)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 1);\n        i0.ɵɵelement(14, \"div\", 2)(15, \"div\", 3)(16, \"div\", 4)(17, \"div\", 5);\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 260:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nThis at-rule is not allowed here.\\\\n  \\u2577\\\\n2 \\u2502 \\u250C   @alpha\\\\n3 \\u2502 \\u2502   @return gray;\\\\n  \\u2502 \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500^\\\\n  \\u2575\\\\n  src\\\\\\\\app\\\\\\\\atividades\\\\\\\\1 - HTML, SCSS, Typescript\\\\\\\\a1.4-scss-funcao\\\\\\\\a1.4-scss-funcao.component.scss 2:3  root stylesheet\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[260]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\"]\n  });\n}","map":{"version":3,"names":["A14ScssFuncaoComponent","constructor","ngOnInit","_","_2","selectors","attrs","_c0","decls","vars","consts","template","A14ScssFuncaoComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["D:\\Aplicativos\\teste front\\código teste\\frontend-test-main\\src\\app\\atividades\\1 - HTML, SCSS, Typescript\\a1.4-scss-funcao\\a1.4-scss-funcao.component.ts","D:\\Aplicativos\\teste front\\código teste\\frontend-test-main\\src\\app\\atividades\\1 - HTML, SCSS, Typescript\\a1.4-scss-funcao\\a1.4-scss-funcao.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-a1.4-scss-funcao',\n  templateUrl: './a1.4-scss-funcao.component.html',\n  styleUrls: ['./a1.4-scss-funcao.component.scss']\n})\nexport class A14ScssFuncaoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page-container\">\n  <p>[ ] Crie uma função em scss que eu passe um nível de opacidade/tom da cor e ela me retorne o valor do background.\n    Aplique um nível de cor para cada item.</p>\n  <p>ex.: get-dark-bg(nivel)</p>\n  <p>get-dark-bg(1) retorna rgba(0,0,0,.1)</p>\n  <p>get-dark-bg(2) retorna rgba(0,0,0,.2)</p>\n  <p>get-dark-bg(3) retorna rgba(0,0,0,.3)</p>\n  <p>get-dark-bg(4) retorna rgba(0,0,0,.4)</p>\n\n  <div class=\"wrapper\">\n    <div class=\"item item1\"></div>\n    <div class=\"item item2\"></div>\n    <div class=\"item item3\"></div>\n    <div class=\"item item4\"></div>\n  </div>\n</div>"],"mappings":";;AAOA,OAAM,MAAOA,sBAAsB;EAEjCC,YAAA,GAAgB;EAEhBC,QAAQA,CAAA,GACR;EAAC,QAAAC,CAAA,G;qBALUH,sBAAsB;EAAA;EAAA,QAAAI,EAAA,G;UAAtBJ,sBAAsB;IAAAK,SAAA;IAAAC,KAAA,EAAAC,GAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCNjCE,EADF,CAAAC,cAAA,aAA4B,QACvB;QAAAD,EAAA,CAAAE,MAAA,oLACsC;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC7CH,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,8BAAuB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC9BH,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,4CAAqC;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC5CH,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,4CAAqC;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC5CH,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,6CAAqC;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC5CH,EAAA,CAAAC,cAAA,SAAG;QAAAD,EAAA,CAAAE,MAAA,6CAAqC;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAE5CH,EAAA,CAAAC,cAAA,cAAqB;QAInBD,EAHA,CAAAI,SAAA,cAA8B,cACA,cACA,cACA;QAElCJ,EADE,CAAAG,YAAA,EAAM,EACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}