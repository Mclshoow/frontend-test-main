{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/dialog\";\nexport class FormularioComponent {\n  constructor(http) {\n    this.http = http;\n    this.pessoas = [];\n    this.form = new FormGroup({\n      nome: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(30)]),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      senha: new FormControl(\"\", [Validators.required]),\n      cep: new FormControl(\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(8)]),\n      logradouro: new FormControl({\n        value: \"\",\n        disabled: true\n      }, [Validators.required])\n    });\n  }\n  ngOnInit() {}\n  buscarCep(cep) {\n    const url = `https://viacep.com.br/ws/${cep}/json/`;\n    this.http.get(url).subscribe(data => {\n      this.form.get('logradouro')?.setValue(data.logradouro);\n    });\n  }\n  adicionarPessoa() {\n    if (this.form.valid) {\n      const pessoa = {\n        nome: this.form.get('nome').value,\n        email: this.form.get('email').value,\n        senha: this.form.get('senha').value,\n        cep: this.form.get('cep').value,\n        logradouro: this.form.get('logradouro').value\n      };\n      this.pessoas.push(pessoa);\n      this.form.reset();\n    } else {\n      alert('Formulário inválido');\n    }\n  }\n  static #_ = this.ɵfac = function FormularioComponent_Factory(t) {\n    return new (t || FormularioComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormularioComponent,\n    selectors: [[\"app-formulario\"]],\n    decls: 25,\n    vars: 0,\n    consts: [[2, \"display\", \"flex\", \"flex-direction\", \"column\", \"gap\", \"20px\"], [\"appearance\", \"fill\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Digite o nome\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Digite o e-mail\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Digite a senha\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Digite o CEP\"], [\"disabled\", \"\", \"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Digite o logradouro\"], [\"mat-raised-button\", \"\"], [\"mat-raised-button\", \"\", \"matDialogClose\", \"\"]],\n    template: function FormularioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-form-field\", 1)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 1)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 1)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"CEP\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 1)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Logradouro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 7);\n        i0.ɵɵtext(22, \"Salvar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 8);\n        i0.ɵɵtext(24, \"Cancelar\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i3.MatButton, i2.NgForm, i4.MatInput, i5.MatFormField, i5.MatLabel, i6.MatDialogClose],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","FormularioComponent","constructor","http","pessoas","form","nome","required","minLength","maxLength","email","senha","cep","logradouro","value","disabled","ngOnInit","buscarCep","url","get","subscribe","data","setValue","adicionarPessoa","valid","pessoa","push","reset","alert","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","FormularioComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["D:\\Aplicativos\\teste front\\código teste\\frontend-test-main\\src\\app\\atividades\\2 - CRUD\\formulario\\formulario.component.ts","D:\\Aplicativos\\teste front\\código teste\\frontend-test-main\\src\\app\\atividades\\2 - CRUD\\formulario\\formulario.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\ninterface Pessoa {\n  nome: string;\n  email: string;\n  senha: string;\n  cep: string;\n  logradouro: string;\n}\n\n@Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class FormularioComponent implements OnInit {\n  pessoas: Pessoa[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  form = new FormGroup({\n    nome: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(30)]),\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    senha: new FormControl(\"\", [Validators.required]),\n    cep: new FormControl(\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(8)]),\n    logradouro: new FormControl({ value: \"\", disabled: true }, [Validators.required]),\n  });\n\n  ngOnInit(): void {\n  }\n\n  buscarCep(cep: string) {\n    const url = `https://viacep.com.br/ws/${cep}/json/`;\n    this.http.get(url).subscribe((data: any) => {\n      this.form.get('logradouro')?.setValue(data.logradouro);\n    });\n  }\n\n  adicionarPessoa() {\n    if (this.form.valid) {\n      const pessoa: Pessoa = {\n        nome: this.form.get('nome')!.value!,\n        email: this.form.get('email')!.value!,\n        senha: this.form.get('senha')!.value!,\n        cep: this.form.get('cep')!.value!,\n        logradouro: this.form.get('logradouro')!.value!\n      };\n      this.pessoas.push(pessoa);\n\n      this.form.reset();\n    } else {\n      alert('Formulário inválido');\n    }\n  }\n}\n","<form style=\"display: flex; flex-direction: column; gap: 20px\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Nome</mat-label>\n    <input type=\"text\" matInput placeholder=\"Digite o nome\" />\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Email</mat-label>\n    <input type=\"text\" matInput placeholder=\"Digite o e-mail\" />\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Senha</mat-label>\n    <input type=\"password\" matInput placeholder=\"Digite a senha\" />\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>CEP</mat-label>\n    <input type=\"text\" matInput placeholder=\"Digite o CEP\" />\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Logradouro</mat-label>\n    <input disabled type=\"text\" matInput placeholder=\"Digite o logradouro\" />\n  </mat-form-field>\n  <button mat-raised-button>Salvar</button>\n  <button mat-raised-button matDialogClose>Cancelar</button>\n</form>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}